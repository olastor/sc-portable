name: "Build"

on:
  push:
    branches:
      - main

jobs:
  build-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            api/
            client/
          key: ${{ hashFiles('scripts/import.py', 'scripts/build-data.sh') }}
      - name: build the data
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo scripts/build-data.sh
      - name: zip the data
        run: sudo zip -r api.zip api
      - uses: actions/upload-artifact@v3
        with:
          name: sc-client
          path: client/
          retention-days: 5
      - uses: actions/upload-artifact@v3
        with:
          name: sc-api-data
          path: api.zip
          retention-days: 5

  build-redbean:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: binaries/
          key: ${{ hashFiles('.redbean-version', 'scripts/build-redbean.sh') }}
      - name: build the data
        if: steps.cache.outputs.cache-hit != 'true'
        run: scripts/build-redbean.sh
      - uses: actions/upload-artifact@v3
        with:
          name: redbean-binaries
          path: binaries/
          retention-days: 5

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: docs/site
          key: ${{ hashFiles('docs/**/*') }}
      - name: build the data
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip3 install --user mkdocs-material
          cd docs
          mkdocs build
          mkdir -p docs/site/builds
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/site
          retention-days: 5

  bundle:
    runs-on: ubuntu-latest
    needs: ["build-data", "build-redbean"]
    steps:
      - uses: actions/checkout@v3
      - name: get data
        uses: actions/download-artifact@v3
        with:
          name: redbean-binaries
          path: binaries
      - name: get data 2
        uses: actions/download-artifact@v3
        with:
          name: sc-api-data
      - name: get data 3
        uses: actions/download-artifact@v3
        with:
          name: sc-client
          path: client
      - name: package it
        run: |
          unzip api.zip
          mv binaries/redbean.com .
          scripts/package.sh "en" "redbean.com"
      - uses: actions/upload-artifact@v3
        with:
          name: result
          path: redbean.com
          retention-days: 5
  
  deploy:
    runs-on: ubuntu-latest
    needs: ["bundle", "build-docs"]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: get data 2
        uses: actions/download-artifact@v3
        with:
          name: result
      - name: build docs
        run: |
          mv redbean.com builds/
      - name: push prod
        run: |
          git config --global user.name "Push Bot"
          git config --global user.email "olastor@users.noreply.github.com"
          git add -A
          git commit -m "deploy"
          git push
