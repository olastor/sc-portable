name: "Build and Deploy"

on:
  push:
    branches:
      - main
    tags:
      - v*
jobs:
  build-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        if: "!startsWith(github.ref, 'refs/tags/v')"
        id: cache
        with:
          path: |
            api/
            client/
          key: ${{ hashFiles('scripts/import.py', 'scripts/build-data.sh') }}
      - name: Build Static API Data
        if: "startsWith(github.ref, 'refs/tags/v') || steps.cache.outputs.cache-hit != 'true'"
        run: sudo scripts/build-data.sh
      - name: Compress API Data
        run: sudo zip -qr api.zip api
      - uses: actions/upload-artifact@v3
        with:
          name: sc-client
          path: client/
          retention-days: 5
      - uses: actions/upload-artifact@v3
        with:
          name: sc-api-data
          path: api.zip
          retention-days: 5

  build-redbean:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: binaries/
          key: ${{ hashFiles('.redbean-version', 'scripts/build-redbean.sh') }}
      - name: Build Redbean
        if: steps.cache.outputs.cache-hit != 'true'
        run: scripts/build-redbean.sh
      - uses: actions/upload-artifact@v3
        with:
          name: redbean-binaries
          path: binaries/
          retention-days: 5


  bundle-files:
    runs-on: ubuntu-latest
    needs: ["build-data", "build-redbean"]
    steps:
      - uses: actions/checkout@v3
      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: redbean-binaries
          path: binaries
      - name: Download API data
        uses: actions/download-artifact@v3
        with:
          name: sc-api-data
      - name: Download Client Build
        uses: actions/download-artifact@v3
        with:
          name: sc-client
          path: client
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install --user beautifulsoup4
      - name: Create Executables
        run: |
          unzip -q api.zip
          mv binaries/redbean.com .

          cp redbean.com "sc-portable_${GITHUB_REF_NAME}_en.com"
          cp redbean.com "sc-portable_${GITHUB_REF_NAME}_en-de.com"
        
          scripts/package.sh "en" "sc-portable_${GITHUB_REF_NAME}_en.com"
          scripts/create_search_index.py "en" "sc-portable_${GITHUB_REF_NAME}_en.db"

          scripts/package.sh "en,de" "sc-portable_${GITHUB_REF_NAME}_en-de.com"
          scripts/create_search_index.py "en,de" "sc-portable_${GITHUB_REF_NAME}_en-de.db"

          rm redbean.com
      - uses: actions/upload-artifact@v3
        with:
          name: sc-portable
          path: "*.com"
          retention-days: 5
      - uses: actions/upload-artifact@v3
        with:
          name: sc-portable-search
          path: "*.db"
          retention-days: 5

  build-docs:
    runs-on: ubuntu-latest
    needs: ["bundle-files"]
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Download Executables
        uses: actions/download-artifact@v3
        with:
          name: sc-portable
      - name: Download SQLite Databases
        uses: actions/download-artifact@v3
        with:
          name: sc-portable-search
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install --user mkdocs-material
      - name: Build Docs
        run: |
          python3 scripts/create_docs_table.py
          cd docs/
          mkdocs build
          cd ..
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/site/
          retention-days: 5
  
  release-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Executables
        uses: actions/download-artifact@v3
        with:
          name: sc-portable
      - name: Download SQLite databases
        uses: actions/download-artifact@v3
        with:
          name: sc-portable-search
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "*.com,*.db"
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-website:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: ["build-docs"]
    # needs: ["build-docs", "release-tag"]
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'website'
      - name: Download Docs Build
        uses: actions/download-artifact@v3
        with:
          name: docs
      - name: Deploy Website
        run: |
          git config --global user.name "Push Bot"
          git config --global user.email "olastor@users.noreply.github.com"
          git remote set-url origin "https://${{ secrets.GITHUB_TOKEN }}@github.com/olastor/sc-portable.git"
          git add -A
          git commit -m "deploy"
          git push
